# network flag to enable SHARP
export SBATCH_NETWORK=sharp

## DL params
: "${ENABLE_DALI:=False}"
: "${USE_CUDA_GRAPH:=True}"
: "${CACHE_EVAL_IMAGES:=True}"
: "${EVAL_SEGM_NUMPROCS:=10}"
: "${EVAL_MASK_VIRTUAL_PASTE:=True}"
: "${INCLUDE_RPN_HEAD:=True}"
: "${PRECOMPUTE_RPN_CONSTANT_TENSORS:=True}"
: "${DATALOADER_NUM_WORKERS:=2}"
: "${HYBRID_LOADER:=True}"
: "${NUM_GRAPHS:=1}"
: "${DISABLE_LOSS_LOGGING:=False}"
: "${SOLVER_MAX_ITER:=20000}"
: "${BOTTLENECK:=SpatialBottleneckWithFixedBatchNorm}"
: "${CACHE_SCALE_BIAS:=True}"
: "${MLPERF_POWER_TRAIN_AFTER_RUN_STOP:=0}"

export BATCHSIZE=4

## DL params
export EXTRA_PARAMS=""
export EXTRA_CONFIG='SOLVER.BASE_LR 0.24 SOLVER.WARMUP_FACTOR 1.0434782608695652173913043478261e-4 SOLVER.WARMUP_ITERS 2300 SOLVER.WARMUP_METHOD mlperf_linear SOLVER.STEPS (6125,8000) SOLVER.IMS_PER_BATCH 256 TEST.IMS_PER_BATCH 256 MODEL.RPN.FPN_POST_NMS_TOP_N_TRAIN 1000 MODEL.RPN.FPN_POST_NMS_TOP_N_PER_IMAGE True NHWC True'
export EXTRA_CONFIG="${EXTRA_CONFIG} SOLVER.MAX_ITER ${SOLVER_MAX_ITER} DATALOADER.DALI $ENABLE_DALI DATALOADER.DALI_ON_GPU $ENABLE_DALI DATALOADER.CACHE_EVAL_IMAGES $CACHE_EVAL_IMAGES EVAL_SEGM_NUMPROCS $EVAL_SEGM_NUMPROCS USE_CUDA_GRAPH $USE_CUDA_GRAPH EVAL_MASK_VIRTUAL_PASTE $EVAL_MASK_VIRTUAL_PASTE MODEL.BACKBONE.INCLUDE_RPN_HEAD $INCLUDE_RPN_HEAD DATALOADER.NUM_WORKERS $DATALOADER_NUM_WORKERS PRECOMPUTE_RPN_CONSTANT_TENSORS $PRECOMPUTE_RPN_CONSTANT_TENSORS DATALOADER.HYBRID $HYBRID_LOADER CUDA_GRAPH_NUM_SHAPES_PER_ORIENTATION $NUM_GRAPHS DISABLE_LOSS_LOGGING $DISABLE_LOSS_LOGGING MODEL.RESNETS.FIRST_TRANS_FUNC $BOTTLENECK MODEL.RESNETS.TRANS_FUNC $BOTTLENECK MODEL.BACKBONE.DONT_RECOMPUTE_SCALE_AND_BIAS $CACHE_SCALE_BIAS"

## System run parms
export DGXNNODES=8
export NCCL_COLLNET_ENABLE=1
export NCCL_COLLNET_NODE_THRESHOLD=$DGXNNODES

export DGXSYSTEM=$(basename $(readlink -f ${BASH_SOURCE[0]}) | sed 's/^config_//' | sed 's/\.sh$//' )
WALLTIME_MINUTES=30

if [[ ${MLPERF_POWER_TRAIN_AFTER_RUN_STOP} -gt 0 ]]; then
  export WALLTIME_MINUTES=$((${WALLTIME_MINUTES} + 15))  
  export EXTRA_CONFIG="${EXTRA_CONFIG} SUSTAINED_TRAINING_TIME 10"
fi
if [[ "${SET_MAXQ_CLK:-0}" == "1" ]] || [[ "${SET_MINEDP_CLK:-0}" == "1" ]]; then
  export WALLTIME_MINUTES=$((${WALLTIME_MINUTES} + 5))
  ## gpc frequency at maxQ and minEDP point
  export MAXQ_CLK=1185
  export MINEDP_CLK=1485
fi
export WALLTIME=$(( ${NEXP:-1} * ${WALLTIME_MINUTES} + 5 ))

## System config params
export DGXNGPU=8
export DGXSOCKETCORES=64
export DGXNSOCKET=2
export DGXHT=2 	# HT is on is 2, HT off is 1
